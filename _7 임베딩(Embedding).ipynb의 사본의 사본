{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1mBJgcpLrcyJeytlgarr2Gftff8JROPd8","timestamp":1670034613792}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"sqJ4qz2uwHHH"},"source":["# 임베딩(Embedding)"]},{"cell_type":"markdown","metadata":{"id":"E2HuxbsICXZc"},"source":["* 워드 임베딩은 단어를 컴퓨터가 이해하고, 효율적으로 처리할 수 있도록 단어를 벡터화하는 기술\n","* 워드 임베딩은 단어의 의미를 잘 표현해야만 하며, 현재까지도 많은 표현 방법이 연구\n","* 워드 임베딩을 거쳐 잘 표현된 단어 벡터들은 계산이 가능하며, 모델 투입도 가능"]},{"cell_type":"markdown","metadata":{"id":"m0bGg7PjHyKM"},"source":["## 인코딩(Encoding)"]},{"cell_type":"markdown","metadata":{"id":"lWVay2ofi4vR"},"source":["* 기계는 자연어(영어, 한국어 등)을 이해할 수 없음\n","* 데이터를 기계가 이해할 수 있도록 숫자 등으로 변환해주는 작업이 필요\n","* 이러한 작업을 인코딩이라고 함\n","\n","* 텍스트 처리에서는 주로 정수 인코딩, 원 핫 인코딩을 사용"]},{"cell_type":"markdown","metadata":{"id":"QPXDPmRtKDfr"},"source":["### 정수 인코딩"]},{"cell_type":"markdown","metadata":{"id":"zzb5eqDEPJDs"},"source":["#### dictionary를 이용한 정수 인코딩"]},{"cell_type":"markdown","metadata":{"id":"MecMDCLZQz8X"},"source":["* 각 단어와 정수 인덱스를 연결하고, 토큰을 변환해주는 정수 인코딩"]},{"cell_type":"code","metadata":{"id":"AZoYLia2PQTV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038423282,"user_tz":-540,"elapsed":1132,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"fc18b18a-af95-439a-b7ff-687d57dd4a13"},"source":["text = \"평생 살 것처럼 꿈을 꾸러아. 그리고 내일 죽을 것처럼 오늘을 살아라.\"\n","tokens = [x for x in text.split(' ')]\n","unique = set(tokens)\n","unique = list(unique)\n","\n","token2idx = {}\n","for i in range(len(unique)):\n","  token2idx[unique[i]] = i\n","\n","encode = [token2idx[x] for x in tokens]\n","encode"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[4, 0, 7, 8, 9, 5, 2, 3, 7, 1, 6]"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","metadata":{"id":"uBEtdH1cPENH"},"source":["#### keras를 이용한 정수 인코딩"]},{"cell_type":"markdown","metadata":{"id":"OpuQdjiLhogy"},"source":["* 정수 인코딩은 단어에 정수로 레이블을 부여\n","* `dictionary`, `nltk` 패키지를 이용한 방법들도 있지만, `keras`에서는 텍스트 처리에 필요한 도구들을 지원\n","* 해당 도구는 자동으로 단어 빈도가 높은 단어의 인덱스는 낮게끔 설정"]},{"cell_type":"code","metadata":{"id":"fIqPMClFiMvb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038424281,"user_tz":-540,"elapsed":13,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"f2b7d533-7af9-4c17-c1cf-a247b17ef993"},"source":["from tensorflow.keras.preprocessing.text import Tokenizer\n","\n","text = \"평생 살 것처럼 꿈을 꾸러아. 그리고 내일 죽을 것처럼 오늘을 살아라.\"\n","\n","t = Tokenizer()\n","t.fit_on_texts([text])\n","print(t.word_index)\n","\n","encoded = t.texts_to_sequences([text])[0]\n","print(encoded)"],"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["{'것처럼': 1, '평생': 2, '살': 3, '꿈을': 4, '꾸러아': 5, '그리고': 6, '내일': 7, '죽을': 8, '오늘을': 9, '살아라': 10}\n","[2, 3, 1, 4, 5, 6, 7, 8, 1, 9, 10]\n"]}]},{"cell_type":"markdown","metadata":{"id":"2TDrAJL-KEt8"},"source":["### 원 핫 인코딩(One-Hot Encoding)"]},{"cell_type":"markdown","metadata":{"id":"2zA6x8FbmeqS"},"source":["#### 조건문과 반복문을 이용한 원 핫 인코딩"]},{"cell_type":"markdown","metadata":{"id":"IKGnvTw7RFf5"},"source":["* 원 핫 인코딩은 정수 인코딩한 결과를 벡터로 변환한 인코딩\n","* 원 핫 인코딩은 전체 단어 개수 만큼의 길이를 가진 배열에 해당 정수를 가진 위치는 1, 나머지는 0을 가진 벡터로 변환   "]},{"cell_type":"code","metadata":{"id":"MlHc9XXERFla","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038424282,"user_tz":-540,"elapsed":12,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"ef68e3d2-21d3-44a9-d182-363a0d291865"},"source":["import numpy as np\n","\n","one_hot = []\n","for i in range(len(encoded)):\n","  temp = []\n","  for j in range(max(encoded)):\n","    if j == (encoded[i] - 1):\n","      temp.append(1)\n","    else:\n","      temp.append(0)\n","  one_hot.append(temp)\n","\n","\n","np.array(one_hot)"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n","       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n","       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n","       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]])"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","metadata":{"id":"xk_Bna8tmmqS"},"source":["#### keras를 이용한 원 핫 인코딩"]},{"cell_type":"markdown","metadata":{"id":"oxlWLLJfht7i"},"source":["* `keras`에서는 정수 인코딩을 원 핫 인코딩을 간단하게 변환해주는 `to_categorical()` 함수를 제공 "]},{"cell_type":"code","metadata":{"id":"xRJ8frWZiMeS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038424282,"user_tz":-540,"elapsed":9,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"0bb6d3f9-db46-4416-b88e-ae4a2d824048"},"source":["from tensorflow.keras.utils import to_categorical\n","\n","one_hot = to_categorical(encoded)\n","one_hot"],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.],\n","       [0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],\n","       [0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],\n","       [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.]], dtype=float32)"]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","metadata":{"id":"0T4R-JlP2-6k"},"source":["## IMDB 데이터\n","\n","- 인터넷 영화 데이터베이스(Internet Movie Database)\n","\n","- 양극단의 리뷰 5만개로 이루어진 데이터셋\n","  - 훈련데이터: 25,000개\n","  - 테스트데이터 : 25,000개\n","\n","  <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQlk-f2SHB6-Vs3RWwIugMctsyEn2QVZWC5KQ&usqp=CAU\">\n","\n","- https://www.imdb.com/interfaces/"]},{"cell_type":"markdown","metadata":{"id":"gxmuXi9L3-O2"},"source":["### module import"]},{"cell_type":"code","metadata":{"id":"XrfsUoGS2EVN","executionInfo":{"status":"ok","timestamp":1670038424283,"user_tz":-540,"elapsed":7,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["from tensorflow.keras.datasets import imdb\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Embedding, Dense, Flatten"],"execution_count":42,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YyMXXlpY4Ajz"},"source":["### 데이터 로드"]},{"cell_type":"code","metadata":{"id":"wNnbw2tH2EiP","executionInfo":{"status":"ok","timestamp":1670038428733,"user_tz":-540,"elapsed":4457,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["num_words = 1000\n","max_len = 20\n","\n","(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=num_words)"],"execution_count":43,"outputs":[]},{"cell_type":"code","metadata":{"id":"OGnkPs_U2Ezk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038428734,"user_tz":-540,"elapsed":49,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"ee313611-0d1e-4e9e-e94b-522cde2a0cb2"},"source":["print(x_train.shape)\n","print(y_train.shape)\n","print(x_test.shape)\n","print(y_test.shape)"],"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["(25000,)\n","(25000,)\n","(25000,)\n","(25000,)\n"]}]},{"cell_type":"markdown","metadata":{"id":"bvtDvmuX4_JB"},"source":["### 데이터 확인\n","- 긍정: 1\n","- 부정: 0"]},{"cell_type":"code","metadata":{"id":"wFruX-Vp2ExJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038428735,"user_tz":-540,"elapsed":47,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"9c1d2718-5e59-4cb0-af2a-f701115467bf"},"source":["print(x_train[0])\n","print(y_train[0])"],"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 14, 22, 16, 43, 530, 973, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 838, 112, 50, 670, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 546, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 530, 38, 76, 15, 13, 2, 4, 22, 17, 515, 17, 12, 16, 626, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 619, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 723, 36, 71, 43, 530, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n","1\n"]}]},{"cell_type":"code","metadata":{"id":"xSZ37jXC5qoj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038428736,"user_tz":-540,"elapsed":45,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"e4a1338f-7614-4ae8-9dae-1b56791abfcf"},"source":["for i in range(10):\n","  if y_train[i] == 0:\n","    label = \"부정\"\n","  else:\n","    label = \"긍정\"\n","  print(\"{}\\n{}\".format(x_train[i], label))"],"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 14, 22, 16, 43, 530, 973, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 838, 112, 50, 670, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 546, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 530, 38, 76, 15, 13, 2, 4, 22, 17, 515, 17, 12, 16, 626, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 619, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 723, 36, 71, 43, 530, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n","긍정\n","[1, 194, 2, 194, 2, 78, 228, 5, 6, 2, 2, 2, 134, 26, 4, 715, 8, 118, 2, 14, 394, 20, 13, 119, 954, 189, 102, 5, 207, 110, 2, 21, 14, 69, 188, 8, 30, 23, 7, 4, 249, 126, 93, 4, 114, 9, 2, 2, 5, 647, 4, 116, 9, 35, 2, 4, 229, 9, 340, 2, 4, 118, 9, 4, 130, 2, 19, 4, 2, 5, 89, 29, 952, 46, 37, 4, 455, 9, 45, 43, 38, 2, 2, 398, 4, 2, 26, 2, 5, 163, 11, 2, 2, 4, 2, 9, 194, 775, 7, 2, 2, 349, 2, 148, 605, 2, 2, 15, 123, 125, 68, 2, 2, 15, 349, 165, 2, 98, 5, 4, 228, 9, 43, 2, 2, 15, 299, 120, 5, 120, 174, 11, 220, 175, 136, 50, 9, 2, 228, 2, 5, 2, 656, 245, 2, 5, 4, 2, 131, 152, 491, 18, 2, 32, 2, 2, 14, 9, 6, 371, 78, 22, 625, 64, 2, 9, 8, 168, 145, 23, 4, 2, 15, 16, 4, 2, 5, 28, 6, 52, 154, 462, 33, 89, 78, 285, 16, 145, 95]\n","부정\n","[1, 14, 47, 8, 30, 31, 7, 4, 249, 108, 7, 4, 2, 54, 61, 369, 13, 71, 149, 14, 22, 112, 4, 2, 311, 12, 16, 2, 33, 75, 43, 2, 296, 4, 86, 320, 35, 534, 19, 263, 2, 2, 4, 2, 33, 89, 78, 12, 66, 16, 4, 360, 7, 4, 58, 316, 334, 11, 4, 2, 43, 645, 662, 8, 257, 85, 2, 42, 2, 2, 83, 68, 2, 15, 36, 165, 2, 278, 36, 69, 2, 780, 8, 106, 14, 2, 2, 18, 6, 22, 12, 215, 28, 610, 40, 6, 87, 326, 23, 2, 21, 23, 22, 12, 272, 40, 57, 31, 11, 4, 22, 47, 6, 2, 51, 9, 170, 23, 595, 116, 595, 2, 13, 191, 79, 638, 89, 2, 14, 9, 8, 106, 607, 624, 35, 534, 6, 227, 7, 129, 113]\n","부정\n","[1, 4, 2, 2, 33, 2, 4, 2, 432, 111, 153, 103, 4, 2, 13, 70, 131, 67, 11, 61, 2, 744, 35, 2, 761, 61, 2, 452, 2, 4, 985, 7, 2, 59, 166, 4, 105, 216, 2, 41, 2, 9, 15, 7, 35, 744, 2, 31, 8, 4, 687, 23, 4, 2, 2, 6, 2, 42, 38, 39, 121, 59, 456, 10, 10, 7, 265, 12, 575, 111, 153, 159, 59, 16, 2, 21, 25, 586, 482, 39, 4, 96, 59, 716, 12, 4, 172, 65, 9, 579, 11, 2, 4, 2, 5, 2, 7, 2, 17, 13, 2, 12, 19, 6, 464, 31, 314, 11, 2, 6, 719, 605, 11, 8, 202, 27, 310, 4, 2, 2, 8, 2, 58, 10, 10, 537, 2, 180, 40, 14, 413, 173, 7, 263, 112, 37, 152, 377, 4, 537, 263, 846, 579, 178, 54, 75, 71, 476, 36, 413, 263, 2, 182, 5, 17, 75, 2, 922, 36, 279, 131, 2, 17, 2, 42, 17, 35, 921, 2, 192, 5, 2, 2, 19, 2, 217, 2, 2, 537, 2, 2, 5, 736, 10, 10, 61, 403, 9, 2, 40, 61, 2, 5, 27, 2, 159, 90, 263, 2, 2, 309, 8, 178, 5, 82, 2, 4, 65, 15, 2, 145, 143, 2, 12, 2, 537, 746, 537, 537, 15, 2, 4, 2, 594, 7, 2, 94, 2, 2, 2, 11, 2, 4, 538, 7, 2, 246, 2, 9, 2, 11, 635, 14, 9, 51, 408, 12, 94, 318, 2, 12, 47, 6, 2, 936, 5, 2, 2, 19, 49, 7, 4, 2, 2, 2, 25, 80, 126, 842, 10, 10, 2, 2, 2, 27, 2, 11, 2, 2, 159, 27, 341, 29, 2, 19, 2, 173, 7, 90, 2, 8, 30, 11, 4, 2, 86, 2, 8, 2, 46, 11, 2, 21, 29, 9, 2, 23, 4, 2, 2, 793, 6, 2, 2, 2, 10, 10, 246, 50, 9, 6, 2, 2, 746, 90, 29, 2, 8, 124, 4, 882, 4, 882, 496, 27, 2, 2, 537, 121, 127, 2, 130, 5, 29, 494, 8, 124, 4, 882, 496, 4, 341, 7, 27, 846, 10, 10, 29, 9, 2, 8, 97, 6, 236, 2, 2, 8, 4, 2, 7, 31, 7, 2, 91, 2, 2, 70, 4, 882, 30, 579, 42, 9, 12, 32, 11, 537, 10, 10, 11, 14, 65, 44, 537, 75, 2, 2, 2, 2, 2, 4, 2, 7, 154, 5, 4, 518, 53, 2, 2, 7, 2, 882, 11, 399, 38, 75, 257, 2, 19, 2, 17, 29, 456, 4, 65, 7, 27, 205, 113, 10, 10, 2, 4, 2, 2, 9, 242, 4, 91, 2, 2, 5, 2, 307, 22, 7, 2, 126, 93, 40, 2, 13, 188, 2, 2, 19, 4, 2, 7, 2, 537, 23, 53, 537, 21, 82, 40, 2, 13, 2, 14, 280, 13, 219, 4, 2, 431, 758, 859, 4, 953, 2, 2, 7, 2, 5, 94, 40, 25, 238, 60, 2, 4, 2, 804, 2, 7, 4, 2, 132, 8, 67, 6, 22, 15, 9, 283, 8, 2, 14, 31, 9, 242, 955, 48, 25, 279, 2, 23, 12, 2, 195, 25, 238, 60, 796, 2, 4, 671, 7, 2, 5, 4, 559, 154, 888, 7, 726, 50, 26, 49, 2, 15, 566, 30, 579, 21, 64, 2]\n","긍정\n","[1, 249, 2, 7, 61, 113, 10, 10, 13, 2, 14, 20, 56, 33, 2, 18, 457, 88, 13, 2, 2, 45, 2, 13, 70, 79, 49, 706, 919, 13, 16, 355, 340, 355, 2, 96, 143, 4, 22, 32, 289, 7, 61, 369, 71, 2, 5, 13, 16, 131, 2, 249, 114, 249, 229, 249, 20, 13, 28, 126, 110, 13, 473, 8, 569, 61, 419, 56, 429, 6, 2, 18, 35, 534, 95, 474, 570, 5, 25, 124, 138, 88, 12, 421, 2, 52, 725, 2, 61, 419, 11, 13, 2, 15, 2, 20, 11, 4, 2, 5, 296, 12, 2, 5, 15, 421, 128, 74, 233, 334, 207, 126, 224, 12, 562, 298, 2, 2, 7, 2, 5, 516, 988, 43, 8, 79, 120, 15, 595, 13, 784, 25, 2, 18, 165, 170, 143, 19, 14, 5, 2, 6, 226, 251, 7, 61, 113]\n","부정\n","[1, 778, 128, 74, 12, 630, 163, 15, 4, 2, 2, 2, 2, 32, 85, 156, 45, 40, 148, 139, 121, 664, 665, 10, 10, 2, 173, 4, 749, 2, 16, 2, 8, 4, 226, 65, 12, 43, 127, 24, 2, 10, 10]\n","부정\n","[1, 2, 365, 2, 5, 2, 354, 11, 14, 2, 2, 7, 2, 2, 2, 356, 44, 4, 2, 500, 746, 5, 200, 4, 2, 11, 2, 2, 2, 2, 2, 5, 2, 26, 6, 2, 2, 17, 369, 37, 215, 2, 143, 2, 5, 2, 8, 2, 15, 36, 119, 257, 85, 52, 486, 9, 6, 2, 2, 63, 271, 6, 196, 96, 949, 2, 4, 2, 7, 4, 2, 2, 819, 63, 47, 77, 2, 180, 6, 227, 11, 94, 2, 2, 13, 423, 4, 168, 7, 4, 22, 5, 89, 665, 71, 270, 56, 5, 13, 197, 12, 161, 2, 99, 76, 23, 2, 7, 419, 665, 40, 91, 85, 108, 7, 4, 2, 5, 2, 81, 55, 52, 2]\n","긍정\n","[1, 4, 2, 716, 4, 65, 7, 4, 689, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 628, 2, 37, 9, 150, 4, 2, 2, 11, 2, 4, 2, 847, 313, 6, 176, 2, 9, 2, 138, 9, 2, 19, 4, 96, 183, 26, 4, 192, 15, 27, 2, 799, 2, 2, 588, 84, 11, 4, 2, 152, 339, 2, 42, 2, 2, 2, 345, 2, 2, 142, 43, 218, 208, 54, 29, 853, 659, 46, 4, 882, 183, 80, 115, 30, 4, 172, 174, 10, 10, 2, 398, 2, 2, 526, 34, 2, 2, 2, 2, 17, 4, 2, 2, 871, 64, 85, 22, 2, 2, 38, 230, 9, 4, 2, 2, 251, 2, 2, 195, 301, 14, 16, 31, 7, 4, 2, 8, 783, 2, 33, 4, 2, 103, 465, 2, 42, 845, 45, 446, 11, 2, 19, 184, 76, 32, 4, 2, 207, 110, 13, 197, 4, 2, 16, 601, 964, 2, 595, 13, 258, 4, 2, 66, 338, 55, 2, 4, 550, 728, 65, 2, 8, 2, 61, 2, 42, 2, 61, 602, 120, 45, 2, 6, 320, 786, 99, 196, 2, 786, 2, 4, 225, 4, 373, 2, 33, 4, 130, 63, 69, 72, 2, 46, 2, 225, 14, 66, 194, 2, 2, 56, 8, 803, 2, 6, 2, 155, 11, 4, 2, 2, 45, 853, 2, 8, 30, 6, 117, 430, 19, 6, 2, 9, 15, 66, 424, 8, 2, 178, 9, 15, 66, 424, 8, 2, 178, 9, 15, 66, 142, 15, 9, 424, 8, 28, 178, 662, 44, 12, 17, 4, 130, 898, 2, 9, 6, 2, 267, 185, 430, 4, 118, 2, 277, 15, 4, 2, 100, 216, 56, 19, 4, 357, 114, 2, 367, 45, 115, 93, 788, 121, 4, 2, 79, 32, 68, 278, 39, 8, 818, 162, 2, 237, 600, 7, 98, 306, 8, 157, 549, 628, 11, 6, 2, 13, 824, 15, 2, 76, 42, 138, 36, 774, 77, 2, 159, 150, 4, 229, 497, 8, 2, 11, 175, 251, 453, 19, 2, 189, 12, 43, 127, 6, 394, 292, 7, 2, 4, 107, 8, 4, 2, 15, 2, 2, 9, 906, 42, 2, 6, 66, 78, 22, 15, 13, 244, 2, 8, 135, 233, 52, 44, 10, 10, 466, 112, 398, 526, 34, 4, 2, 2, 2, 2, 225, 57, 599, 133, 225, 6, 227, 7, 541, 2, 6, 171, 139, 7, 539, 2, 56, 11, 6, 2, 21, 164, 25, 426, 81, 33, 344, 624, 19, 6, 2, 7, 2, 2, 6, 2, 4, 22, 9, 2, 629, 237, 45, 188, 6, 55, 655, 707, 2, 956, 225, 2, 841, 42, 2, 225, 6, 2, 2, 2, 2, 21, 4, 2, 9, 364, 23, 4, 2, 2, 225, 24, 76, 133, 18, 4, 189, 2, 10, 10, 814, 11, 2, 11, 2, 14, 47, 15, 682, 364, 352, 168, 44, 12, 45, 24, 913, 93, 21, 247, 2, 4, 116, 34, 35, 2, 8, 72, 177, 9, 164, 8, 901, 344, 44, 13, 191, 135, 13, 126, 421, 233, 18, 259, 10, 10, 4, 2, 2, 4, 2, 2, 7, 112, 199, 753, 357, 39, 63, 12, 115, 2, 763, 8, 15, 35, 2, 2, 65, 57, 599, 6, 2, 277, 2, 37, 25, 92, 202, 6, 2, 44, 25, 28, 6, 22, 15, 122, 24, 2, 72, 33, 32]\n","부정\n","[1, 43, 188, 46, 5, 566, 264, 51, 6, 530, 664, 14, 9, 2, 81, 25, 2, 46, 7, 6, 20, 750, 11, 141, 2, 5, 2, 2, 102, 28, 413, 38, 120, 2, 15, 4, 2, 7, 2, 142, 371, 318, 5, 955, 2, 571, 2, 2, 122, 14, 8, 72, 54, 12, 86, 385, 46, 5, 14, 20, 9, 399, 8, 72, 150, 13, 161, 124, 6, 155, 44, 14, 159, 170, 83, 12, 5, 51, 6, 866, 48, 25, 842, 4, 2, 25, 238, 79, 4, 547, 15, 14, 9, 31, 7, 148, 2, 102, 44, 35, 480, 2, 2, 19, 120, 4, 350, 228, 5, 269, 8, 28, 178, 2, 2, 7, 51, 6, 87, 65, 12, 9, 979, 21, 95, 24, 2, 178, 11, 2, 14, 9, 24, 15, 20, 4, 84, 376, 4, 65, 14, 127, 141, 6, 52, 292, 7, 2, 175, 561, 7, 68, 2, 137, 75, 2, 68, 182, 5, 235, 175, 333, 19, 98, 50, 9, 38, 76, 724, 4, 2, 15, 166, 285, 36, 140, 143, 38, 76, 53, 2, 2, 4, 2, 16, 82, 6, 87, 2, 44, 2, 2, 5, 800, 4, 2, 11, 35, 2, 96, 21, 14, 22, 9, 76, 53, 7, 6, 406, 65, 13, 43, 219, 12, 639, 21, 13, 80, 140, 5, 135, 15, 14, 9, 31, 7, 4, 118, 2, 13, 28, 126, 110]\n","긍정\n","[1, 14, 20, 47, 111, 439, 2, 19, 12, 15, 166, 12, 216, 125, 40, 6, 364, 352, 707, 2, 39, 294, 11, 22, 396, 13, 28, 8, 202, 12, 2, 23, 94, 2, 151, 111, 211, 469, 4, 20, 13, 258, 546, 2, 2, 12, 16, 38, 78, 33, 211, 15, 12, 16, 2, 63, 93, 12, 6, 253, 106, 10, 10, 48, 335, 267, 18, 6, 364, 2, 2, 20, 19, 6, 2, 7, 2, 189, 5, 6, 2, 7, 2, 2, 95, 2, 6, 2, 7, 2, 2, 49, 369, 120, 5, 28, 49, 253, 10, 10, 13, 2, 19, 85, 795, 15, 4, 481, 9, 55, 78, 807, 9, 375, 8, 2, 8, 794, 76, 7, 4, 58, 5, 4, 816, 9, 243, 7, 43, 50]\n","부정\n"]}]},{"cell_type":"markdown","metadata":{"id":"izJKnVgY7NWl"},"source":["### 데이터 전처리\n","- 모든 데이터를 같은 길이로 맞추기\n","\n","  - `pad_sequence()`\n","    - 데이터가 maxlen보다 길면 데이터를 자름\n","\n","    - 데이터가 길면 `padding` 설정\n","      - `pre`: 데이터 앞에 0으로 채움\n","      -  `post`: 데이터 뒤에 0으로 채움\n","\n","\n","- 모든 데이터(문장 하나하나)가 같은 길이로 맞추어야 `Embedding` 레이어를 사용할 수 있음"]},{"cell_type":"code","metadata":{"id":"oAF2ZRV32Eup","executionInfo":{"status":"ok","timestamp":1670038428736,"user_tz":-540,"elapsed":38,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["from tensorflow.keras.preprocessing.sequence import pad_sequences\n"],"execution_count":47,"outputs":[]},{"cell_type":"code","metadata":{"id":"NOEVDkuD2EqT","executionInfo":{"status":"ok","timestamp":1670038428737,"user_tz":-540,"elapsed":39,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["max_len = 100\n","\n","pad_x_train = pad_sequences(x_train, maxlen = max_len, padding='pre')\n","pad_x_test = pad_sequences(x_test, maxlen=max_len, padding='pre')"],"execution_count":48,"outputs":[]},{"cell_type":"code","metadata":{"id":"nwpMCUb92Eoe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038428737,"user_tz":-540,"elapsed":37,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"5120366c-fe89-4d87-8639-c73dc12d6f19"},"source":["print(len(x_train[0]))\n","print(len(pad_x_train[0]))"],"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["218\n","100\n"]}]},{"cell_type":"code","metadata":{"id":"RF9sFjn62El8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038428737,"user_tz":-540,"elapsed":32,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"3bb58b80-7770-4714-fe6b-4583b6576d9c"},"source":["print(x_train[0])\n","print(pad_x_train[0])"],"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 14, 22, 16, 43, 530, 973, 2, 2, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 838, 112, 50, 670, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 2, 17, 546, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 2, 2, 469, 4, 22, 71, 87, 12, 16, 43, 530, 38, 76, 15, 13, 2, 4, 22, 17, 515, 17, 12, 16, 626, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 619, 5, 25, 124, 51, 36, 135, 48, 25, 2, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 723, 36, 71, 43, 530, 476, 26, 400, 317, 46, 7, 4, 2, 2, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 2, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n","[  2  33   6  22  12 215  28  77  52   5  14 407  16  82   2   8   4 107\n"," 117   2  15 256   4   2   7   2   5 723  36  71  43 530 476  26 400 317\n","  46   7   4   2   2  13 104  88   4 381  15 297  98  32   2  56  26 141\n","   6 194   2  18   4 226  22  21 134 476  26 480   5 144  30   2  18  51\n","  36  28 224  92  25 104   4 226  65  16  38   2  88  12  16 283   5  16\n","   2 113 103  32  15  16   2  19 178  32]\n"]}]},{"cell_type":"markdown","metadata":{"id":"iVSjFumg-TBt"},"source":["### 모델 구성"]},{"cell_type":"code","metadata":{"id":"Blq1UZP92Ed4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038428738,"user_tz":-540,"elapsed":30,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"4b56d96e-ce92-4b4a-bd8f-437aa9299c4b"},"source":["model = Sequential()\n","\n","model.add(Embedding(input_dim=num_words, output_dim=32, input_length=max_len))\n","\n","model.add(Flatten())\n","model.add(Dense(1,activation='sigmoid'))\n","\n","model.summary()"],"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," embedding_1 (Embedding)     (None, 100, 32)           32000     \n","                                                                 \n"," flatten_1 (Flatten)         (None, 3200)              0         \n","                                                                 \n"," dense_1 (Dense)             (None, 1)                 3201      \n","                                                                 \n","=================================================================\n","Total params: 35,201\n","Trainable params: 35,201\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","metadata":{"id":"H1VqPWEa-m9i"},"source":["### 모델 컴파일 및 학습"]},{"cell_type":"code","metadata":{"id":"CEXe_6de2EcK","executionInfo":{"status":"ok","timestamp":1670038428738,"user_tz":-540,"elapsed":19,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['acc'])"],"execution_count":52,"outputs":[]},{"cell_type":"code","metadata":{"id":"Xr3pegjQ2Eal","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038470461,"user_tz":-540,"elapsed":41742,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"3dc05812-2db3-4e65-af53-5a811e45c5c8"},"source":["history = model.fit(pad_x_train, y_train, epochs=10, batch_size=32, validation_split=0.2)"],"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","625/625 [==============================] - 3s 4ms/step - loss: 0.5618 - acc: 0.7132 - val_loss: 0.4186 - val_acc: 0.8092\n","Epoch 2/10\n","625/625 [==============================] - 3s 5ms/step - loss: 0.3727 - acc: 0.8353 - val_loss: 0.3812 - val_acc: 0.8264\n","Epoch 3/10\n","625/625 [==============================] - 5s 7ms/step - loss: 0.3361 - acc: 0.8554 - val_loss: 0.3854 - val_acc: 0.8240\n","Epoch 4/10\n","625/625 [==============================] - 4s 6ms/step - loss: 0.3074 - acc: 0.8719 - val_loss: 0.3869 - val_acc: 0.8256\n","Epoch 5/10\n","625/625 [==============================] - 4s 7ms/step - loss: 0.2773 - acc: 0.8871 - val_loss: 0.3970 - val_acc: 0.8224\n","Epoch 6/10\n","625/625 [==============================] - 4s 7ms/step - loss: 0.2446 - acc: 0.9040 - val_loss: 0.4083 - val_acc: 0.8204\n","Epoch 7/10\n","625/625 [==============================] - 4s 7ms/step - loss: 0.2113 - acc: 0.9245 - val_loss: 0.4284 - val_acc: 0.8164\n","Epoch 8/10\n","625/625 [==============================] - 3s 4ms/step - loss: 0.1786 - acc: 0.9408 - val_loss: 0.4502 - val_acc: 0.8080\n","Epoch 9/10\n","625/625 [==============================] - 2s 3ms/step - loss: 0.1484 - acc: 0.9551 - val_loss: 0.4730 - val_acc: 0.8042\n","Epoch 10/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.1211 - acc: 0.9685 - val_loss: 0.5014 - val_acc: 0.7978\n"]}]},{"cell_type":"markdown","metadata":{"id":"-gNKkWKP_3c0"},"source":["### 시각화"]},{"cell_type":"code","metadata":{"id":"PYKPQO1B_-EJ","executionInfo":{"status":"ok","timestamp":1670038470465,"user_tz":-540,"elapsed":11,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["import matplotlib.pyplot as plt\n","\n","plt.style.use('seaborn-white')"],"execution_count":54,"outputs":[]},{"cell_type":"code","metadata":{"id":"vMP67mYsAQ9q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038470466,"user_tz":-540,"elapsed":11,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"b554fb79-418f-4109-c10e-d5abdd7dda7c"},"source":["hist_dict = history.history\n","hist_dict.keys()\n"],"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys(['loss', 'acc', 'val_loss', 'val_acc'])"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","metadata":{"id":"d_EjuJva_4YP","colab":{"base_uri":"https://localhost:8080/","height":507},"executionInfo":{"status":"ok","timestamp":1670038470467,"user_tz":-540,"elapsed":11,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"97500aba-1cd9-4924-d4f8-5b2c14677815"},"source":["plt.plot(hist_dict['loss'], '-b', label=\"Train Loss\")\n","plt.plot(hist_dict['val_loss'], 'r:', label='Validation Loss')\n","plt.legend()\n","plt.grid()\n","\n","plt.figure()\n","plt.plot(hist_dict['acc'], '-b', label=\"Train Accuracy\")\n","plt.plot(hist_dict['val_acc'], 'r:', label='Validation Accuracy')\n","plt.legend()\n","plt.grid()\n","\n","plt.show()"],"execution_count":56,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"3GtELilA_avO"},"source":["### 모델 평가"]},{"cell_type":"code","metadata":{"id":"_U0Dz9je2ESh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038512872,"user_tz":-540,"elapsed":2309,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"3ae33820-ddf1-4403-f65a-9bfe46d7058e"},"source":["model.evaluate(pad_x_test, y_test)"],"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["782/782 [==============================] - 2s 3ms/step - loss: 0.4918 - acc: 0.8055\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.49179932475090027, 0.8055199980735779]"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","metadata":{"id":"6aJqudd0AwGa"},"source":["### 단어의 수를 늘린 후 재학습"]},{"cell_type":"code","metadata":{"id":"C1itQHMDA1hn","executionInfo":{"status":"ok","timestamp":1670038608104,"user_tz":-540,"elapsed":5274,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["num_words = 2000\n","max_len = 400\n","\n","(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=num_words)\n","\n","pad_x_train_2 = pad_sequences(x_train, maxlen=max_len, padding='pre')\n","pad_x_test_2 = pad_sequences(x_test, maxlen=max_len, padding='pre')"],"execution_count":60,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"e2WL_yueBibH"},"source":["데이터 확인"]},{"cell_type":"code","metadata":{"id":"AydBwyBMA1ku","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670038658442,"user_tz":-540,"elapsed":358,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"5f9ee450-efb9-42d3-f975-4a34dee74dcb"},"source":["print(x_train[0])\n","print(pad_x_train_2[0])"],"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 14, 22, 16, 43, 530, 973, 1622, 1385, 65, 458, 2, 66, 2, 4, 173, 36, 256, 5, 25, 100, 43, 838, 112, 50, 670, 2, 9, 35, 480, 284, 5, 150, 4, 172, 112, 167, 2, 336, 385, 39, 4, 172, 2, 1111, 17, 546, 38, 13, 447, 4, 192, 50, 16, 6, 147, 2, 19, 14, 22, 4, 1920, 2, 469, 4, 22, 71, 87, 12, 16, 43, 530, 38, 76, 15, 13, 1247, 4, 22, 17, 515, 17, 12, 16, 626, 18, 2, 5, 62, 386, 12, 8, 316, 8, 106, 5, 4, 2, 2, 16, 480, 66, 2, 33, 4, 130, 12, 16, 38, 619, 5, 25, 124, 51, 36, 135, 48, 25, 1415, 33, 6, 22, 12, 215, 28, 77, 52, 5, 14, 407, 16, 82, 2, 8, 4, 107, 117, 2, 15, 256, 4, 2, 7, 2, 5, 723, 36, 71, 43, 530, 476, 26, 400, 317, 46, 7, 4, 2, 1029, 13, 104, 88, 4, 381, 15, 297, 98, 32, 2, 56, 26, 141, 6, 194, 2, 18, 4, 226, 22, 21, 134, 476, 26, 480, 5, 144, 30, 2, 18, 51, 36, 28, 224, 92, 25, 104, 4, 226, 65, 16, 38, 1334, 88, 12, 16, 283, 5, 16, 2, 113, 103, 32, 15, 16, 2, 19, 178, 32]\n","[   0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    1   14   22   16   43  530  973 1622 1385   65  458    2   66    2\n","    4  173   36  256    5   25  100   43  838  112   50  670    2    9\n","   35  480  284    5  150    4  172  112  167    2  336  385   39    4\n","  172    2 1111   17  546   38   13  447    4  192   50   16    6  147\n","    2   19   14   22    4 1920    2  469    4   22   71   87   12   16\n","   43  530   38   76   15   13 1247    4   22   17  515   17   12   16\n","  626   18    2    5   62  386   12    8  316    8  106    5    4    2\n","    2   16  480   66    2   33    4  130   12   16   38  619    5   25\n","  124   51   36  135   48   25 1415   33    6   22   12  215   28   77\n","   52    5   14  407   16   82    2    8    4  107  117    2   15  256\n","    4    2    7    2    5  723   36   71   43  530  476   26  400  317\n","   46    7    4    2 1029   13  104   88    4  381   15  297   98   32\n","    2   56   26  141    6  194    2   18    4  226   22   21  134  476\n","   26  480    5  144   30    2   18   51   36   28  224   92   25  104\n","    4  226   65   16   38 1334   88   12   16  283    5   16    2  113\n","  103   32   15   16    2   19  178   32]\n"]}]},{"cell_type":"code","metadata":{"id":"mK2kQxNUA1eB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670039294003,"user_tz":-540,"elapsed":327,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"03ffb0f5-d6a1-4eca-a885-5bd7162d3890"},"source":["model = Sequential()\n","\n","model.add(Embedding(input_dim=num_words, output_dim=32, input_length=max_len))\n","\n","model.add(Flatten())\n","model.add(Dense(1,activation='sigmoid'))\n","\n","model.summary()"],"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," embedding_2 (Embedding)     (None, 400, 32)           64000     \n","                                                                 \n"," flatten_2 (Flatten)         (None, 12800)             0         \n","                                                                 \n"," dense_2 (Dense)             (None, 1)                 12801     \n","                                                                 \n","=================================================================\n","Total params: 76,801\n","Trainable params: 76,801\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"id":"I5BK5HXnBtIN","executionInfo":{"status":"ok","timestamp":1670039418773,"user_tz":-540,"elapsed":271,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['acc'])"],"execution_count":66,"outputs":[]},{"cell_type":"code","metadata":{"id":"odClZim0Bs-O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670039460759,"user_tz":-540,"elapsed":41555,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"b12cf06c-8c5a-45bd-a515-e5ef8797fa53"},"source":["history2 = model.fit(pad_x_train_2, y_train, epochs=10, batch_size=32, validation_split=0.2)"],"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","625/625 [==============================] - 3s 4ms/step - loss: 0.4951 - acc: 0.7552 - val_loss: 0.3391 - val_acc: 0.8566\n","Epoch 2/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.2805 - acc: 0.8837 - val_loss: 0.3020 - val_acc: 0.8766\n","Epoch 3/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.2293 - acc: 0.9086 - val_loss: 0.3021 - val_acc: 0.8774\n","Epoch 4/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.1868 - acc: 0.9300 - val_loss: 0.3173 - val_acc: 0.8778\n","Epoch 5/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.1462 - acc: 0.9489 - val_loss: 0.3491 - val_acc: 0.8666\n","Epoch 6/10\n","625/625 [==============================] - 3s 5ms/step - loss: 0.1087 - acc: 0.9669 - val_loss: 0.3568 - val_acc: 0.8696\n","Epoch 7/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.0781 - acc: 0.9790 - val_loss: 0.3869 - val_acc: 0.8662\n","Epoch 8/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.0539 - acc: 0.9870 - val_loss: 0.4240 - val_acc: 0.8582\n","Epoch 9/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.0357 - acc: 0.9926 - val_loss: 0.4587 - val_acc: 0.8554\n","Epoch 10/10\n","625/625 [==============================] - 2s 4ms/step - loss: 0.0227 - acc: 0.9958 - val_loss: 0.5051 - val_acc: 0.8524\n"]}]},{"cell_type":"code","metadata":{"id":"rVPTlmjZB--j","colab":{"base_uri":"https://localhost:8080/","height":507},"executionInfo":{"status":"ok","timestamp":1670039646490,"user_tz":-540,"elapsed":834,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"81522781-8e64-4615-ed01-b87a92e84234"},"source":["hist_dict2 = history.history\n","hist_dict2.keys()\n","\n","plt.plot(hist_dict2['loss'], '-b', label=\"Train Loss\")\n","plt.plot(hist_dict2['val_loss'], 'r:', label='Validation Loss')\n","plt.legend()\n","plt.grid()\n","\n","plt.figure()\n","plt.plot(hist_dict2['acc'], '-b', label=\"Train Accuracy\")\n","plt.plot(hist_dict2['val_acc'], 'r:', label='Validation Accuracy')\n","plt.legend()\n","plt.grid()\n","\n","plt.show()"],"execution_count":69,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"mZ5WbSX_CHUa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670039790312,"user_tz":-540,"elapsed":2457,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"4822fa90-77fe-415e-f739-13b5a04982c5"},"source":["model.evaluate(pad_x_test_2, y_test)"],"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["782/782 [==============================] - 2s 3ms/step - loss: 0.4758 - acc: 0.8512\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.4757973551750183, 0.8511599898338318]"]},"metadata":{},"execution_count":70}]},{"cell_type":"markdown","metadata":{"id":"6I0C5ueK73_g"},"source":["위의 결과도 나쁘지 않으나 과적합이 되는 이유\n","- 단어간 관계나 문장 구조 등 의미적 연결을 고려하지 않음\n","\n","- 시퀀스 전체를 고려한 특성을 학습하는 것은 `Embedding`층 위에 `RNN`층이나 `1D 합성곱`을 추가하는 것이 좋음\n"]},{"cell_type":"markdown","metadata":{"id":"ud_-PnE873_h"},"source":["## Word2Vec\n","\n","- 2013년, Mikolov 와 동료들이 제안한 모형\n","\n","- 분류 등과 같이 별도의 레이블이 없이 텍스트 자체만 있어도 학습이 가능\n","\n","- Word2Vec의 방식  \n","  주변 단어의 관계를 이용\n","\n","  - CBOW(continuous bag-of-words)\n","    - 주변단어의 임베딩을 더해서 대상단어를 예측\n","\n","  - Skip-Gram\n","    - 대상 단어의 임베딩으로 주변단어를 예측\n","\n","    - 일반적으로 CBOW보다 성능이 좋은 편\n","\n","    - 한번에 여러 단어를 예측해야하기 때문에 비효율적  \n","      최근에는 **negative sampling**이라는 방법을 사용\n","\n","  <img src=\"https://www.researchgate.net/publication/328160770/figure/fig14/AS:679665089925122@1539056193562/CBOW-and-Skip-Gram-neural-architectures.ppm\">\n","\n","  <sub>출처: https://www.researchgate.net/figure/CBOW-and-Skip-Gram-neural-architectures_fig14_328160770</sub>"]},{"cell_type":"markdown","metadata":{"id":"QARhfhIt1j4I"},"source":["## T-SNE"]},{"cell_type":"markdown","metadata":{"id":"v9ymcBIKl40u"},"source":["* T-SNE(t-Stochastic Neighbor Embedding)은 고차원의 벡터들의 구조를 보존하며 저차원으로 사상하는 차원 축소 알고리즘\n","* 단어 임베딩에서도 생성된 고차원 벡터들을 시각화하기 위해 이 T-SNE 알고리즘을 많이 이용\n","\n","* t-sne는 가장 먼저 원 공간의 데이터 유사도 $p_{ij}$와 임베딩 공간의 데이터 유사도 $q_{ij}$를 정의\n","* $x_i$에서 $x_j$ 간의 유사도 $p_{j|i}$ 는 다음과 같이 정의\n","\n","$$ p_{j|i} = \\frac {exp({-|x_i - x_j|}^2 / 2  \\sigma^2_i)}{\\sum_{k \\neq i}exp({-|x_i - x_k|}^2 / 2  \\sigma^2_i)} $$\n","\n","* 설명하자면 $p_{j|i}$는 $x_i$와 $x_j$ 간의 거리에서 가중치 $\\sigma^2_i$로 나눈 후, 이를 negative exponential을 취해 모든 점 간의 거리의 합과 나누어준 값으로 두 점 간의 거리가 가까울 수록 큰 값을 가짐\n","\n","* 또한 임베딩 공간에서의 $y_i$에서 $y_j$ 간의 유사도 $q_{j|i}$ 는 다음과 같이 정의\n","\n","$$ q_{j|i} = \\frac {(1 + |y_i-y_j|^2)^{-1}}{\\sum_{k \\neq l}(1 + |y_i-y_j|^2)^{-1}} $$\n","\n","* $q_{j|i}$는 $x_i$와 $x_j$ 간의 거리에서 1을 더해준 후 역수를 취한 값과 전체 합산 값과 나누어 유사도를 정의\n","\n","* T-SNE의 학습은 $p_{j|i}$와 비슷해지도록 $q_{j|i}$의 위치를 조정하는 것이라고 할 수 있음\n","\n"]},{"cell_type":"markdown","metadata":{"id":"d7ocZw5XSRDN"},"source":["## 데이터 준비"]},{"cell_type":"code","metadata":{"id":"ohSE_JnMSRDR","colab":{"base_uri":"https://localhost:8080/","height":181},"executionInfo":{"status":"ok","timestamp":1670040537954,"user_tz":-540,"elapsed":11056,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"7729e560-50f0-4181-fbaa-e8e975ac1d77"},"source":["from sklearn.datasets import fetch_20newsgroups\n","\n","dataset= fetch_20newsgroups(shuffle=True, random_state=1, remove=('headers', 'footers', 'quotes'))\n","\n","documents = dataset.data\n","\n","print(len(documents))\n","documents[2]"],"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["11314\n"]},{"output_type":"execute_result","data":{"text/plain":["\"Although I realize that principle is not one of your strongest\\npoints, I would still like to know why do do not ask any question\\nof this sort about the Arab countries.\\n\\n   If you want to continue this think tank charade of yours, your\\nfixation on Israel must stop.  You might have to start asking the\\nsame sort of questions of Arab countries as well.  You realize it\\nwould not work, as the Arab countries' treatment of Jews over the\\nlast several decades is so bad that your fixation on Israel would\\nbegin to look like the biased attack that it is.\\n\\n   Everyone in this group recognizes that your stupid 'Center for\\nPolicy Research' is nothing more than a fancy name for some bigot\\nwho hates Israel.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"E56d3KXroenQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670041644198,"user_tz":-540,"elapsed":317,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"586508a1-b702-477d-ca5a-260775d80e7f"},"source":["import re\n","import nltk\n","\n","from nltk.corpus import stopwords\n","from nltk.tokenize import word_tokenize\n","\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","\n","def clean_text(d):\n","  pattern = r'[^a-zA-Z\\s]'\n","  text = re.sub(pattern, '', d)\n","  return d\n","\n","\n","def clean_stopword(d):\n","  stop_words = stopwords.words('english')\n","  return ' '.join([w.lower() for w in d.split() if w not in stop_words and len(w) > 3])\n","\n","def tokenize(d):\n","  return word_tokenize(d)"],"execution_count":83,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]}]},{"cell_type":"code","metadata":{"id":"QCo9S9RlrfQg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670041645833,"user_tz":-540,"elapsed":324,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"a7f7990b-78d8-4ccc-d384-864ed2bddaa2"},"source":["import pandas as pd\n","\n","news_df = pd.DataFrame({'article':documents})\n","len(news_df)"],"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11314"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","metadata":{"id":"9xzZu6Iprj5B","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670041646227,"user_tz":-540,"elapsed":3,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"cdf4bf54-83cb-43f2-c23f-c0543c035403"},"source":["news_df.replace(\"\", float(\"NaN\"), inplace=True)\n","news_df.dropna(inplace=True)\n","print(len(news_df))"],"execution_count":85,"outputs":[{"output_type":"stream","name":"stdout","text":["11096\n"]}]},{"cell_type":"code","metadata":{"id":"Oi3PJ7dMsF8K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670041647889,"user_tz":-540,"elapsed":449,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"6949276e-ea88-4398-ae37-f9b9439d7862"},"source":["news_df['article'] = news_df['article'].apply(clean_text)\n","news_df['article']"],"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        Well i'm not sure about the story nad it did s...\n","1        \\n\\n\\n\\n\\n\\n\\nYeah, do you expect people to re...\n","2        Although I realize that principle is not one o...\n","3        Notwithstanding all the legitimate fuss about ...\n","4        Well, I will have to change the scoring on my ...\n","                               ...                        \n","11309    Danny Rubenstein, an Israeli journalist, will ...\n","11310                                                   \\n\n","11311    \\nI agree.  Home runs off Clemens are always m...\n","11312    I used HP DeskJet with Orange Micros Grappler ...\n","11313                                          ^^^^^^\\n...\n","Name: article, Length: 11096, dtype: object"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","metadata":{"id":"ViSra6MYuM9x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670041654425,"user_tz":-540,"elapsed":5367,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"282901e6-b05c-4135-83a2-3a0b8bb75416"},"source":["news_df['article'] = news_df['article'].apply(clean_stopword)\n","news_df['article']"],"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        well sure story seem biased. what disagree sta...\n","1        yeah, expect people read faq, etc. actually ac...\n","2        although realize principle strongest points, w...\n","3        notwithstanding legitimate fuss proposal, much...\n","4        well, change scoring playoff pool. unfortunate...\n","                               ...                        \n","11309    danny rubenstein, israeli journalist, speaking...\n","11310                                                     \n","11311    agree. home runs clemens always memorable. kin...\n","11312    used deskjet orange micros grappler system6.0....\n","11313    ^^^^^^ argument murphy. scared hell came last ...\n","Name: article, Length: 11096, dtype: object"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","metadata":{"id":"Z3JgTpVfSRD_","executionInfo":{"status":"ok","timestamp":1670041668841,"user_tz":-540,"elapsed":14419,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["tokenized_news = news_df['article'].apply(tokenize)\n","tokenized_news = tokenized_news.to_list()"],"execution_count":88,"outputs":[]},{"cell_type":"code","metadata":{"id":"uMCYgUIpSREH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670042147030,"user_tz":-540,"elapsed":294,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"704d77c9-6682-403a-af05-5f91db7b8a57"},"source":["import numpy as np\n","\n","drop_news = [index for index, sentence in enumerate(tokenized_news) if len(sentence) <= 1]\n","news_texts = np.delete(tokenized_news, drop_news, axis=0)\n","print(len(news_texts))"],"execution_count":89,"outputs":[{"output_type":"stream","name":"stdout","text":["10991\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/numpy/lib/function_base.py:4454: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  arr = asarray(arr)\n"]}]},{"cell_type":"markdown","metadata":{"id":"IJ8Zkrar1umI"},"source":["## Gensim을 이용한 Word2Vec"]},{"cell_type":"markdown","metadata":{"id":"-vw3V1fPp88u"},"source":["### CBOW"]},{"cell_type":"code","metadata":{"id":"aByJKUOXp-64","executionInfo":{"status":"ok","timestamp":1670042270924,"user_tz":-540,"elapsed":14348,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["from gensim.models import Word2Vec\n","\n","model = Word2Vec(sentences=news_texts, window=4, size=100, min_count=5, workers=4, sg=0)\n"],"execution_count":92,"outputs":[]},{"cell_type":"code","metadata":{"id":"u9Qigdn1THXO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670042238705,"user_tz":-540,"elapsed":278,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"6b0b1802-843d-4074-df1a-393d768af186"},"source":["model.wv.similarity('man', 'woman')"],"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8601123"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","metadata":{"id":"Yp8qBYyITHXd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670042308842,"user_tz":-540,"elapsed":369,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"7d6a2260-2c6b-4201-8e31-5dd7cb9735ca"},"source":["model.most_similar(positive=['soldiers'])"],"execution_count":93,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-93-000bf9eb3262>:1: DeprecationWarning: Call to deprecated `most_similar` (Method will be removed in 4.0.0, use self.wv.most_similar() instead).\n","  model.most_similar(positive=['soldiers'])\n"]},{"output_type":"execute_result","data":{"text/plain":["[('turks', 0.9737464189529419),\n"," ('killed', 0.9688347578048706),\n"," ('land', 0.9631674289703369),\n"," ('villages', 0.9610463976860046),\n"," ('greeks', 0.9571347236633301),\n"," ('genocide', 0.956312894821167),\n"," ('civilians', 0.9548656940460205),\n"," ('troops', 0.9480776786804199),\n"," ('began', 0.9435669183731079),\n"," ('lived', 0.9419810771942139)]"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","metadata":{"id":"eVjZt1u0THX1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670042378256,"user_tz":-540,"elapsed":304,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"fdee604c-cc7c-4e08-d479-eb4b800097d8"},"source":["model.wv.most_similar(positive=['man', 'soldiers'], negative=['woman'])"],"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('men', 0.9159984588623047),\n"," ('followers', 0.9069833755493164),\n"," ('attack', 0.8925089240074158),\n"," ('jews', 0.8912188410758972),\n"," ('judas', 0.8887395858764648),\n"," ('israelis', 0.8871808052062988),\n"," ('israel', 0.8828359842300415),\n"," ('war', 0.8821102380752563),\n"," ('peace', 0.8803192377090454),\n"," ('death', 0.8774296641349792)]"]},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","metadata":{"id":"bKUEE4nnp5CR"},"source":["### Skip-gram"]},{"cell_type":"code","metadata":{"id":"lcXY8cG50VuX","executionInfo":{"status":"ok","timestamp":1670042511198,"user_tz":-540,"elapsed":33258,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["from gensim.models import Word2Vec\n","\n","model = Word2Vec(sentences=news_texts, window=4, size=100, min_count=5, workers=4, sg=1)"],"execution_count":97,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670042664095,"user_tz":-540,"elapsed":444,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"1a91448d-7726-496b-e766-273f7d3b12fe","id":"AhRnHIENTKBp"},"source":["model.wv.similarity('man', 'woman')"],"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.81355333"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670042664646,"user_tz":-540,"elapsed":3,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"32eae178-3157-479c-d1b1-af17cf509c50","id":"zoVyrDbATKBq"},"source":["model.most_similar(positive=['soldiers'])"],"execution_count":99,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-99-000bf9eb3262>:1: DeprecationWarning: Call to deprecated `most_similar` (Method will be removed in 4.0.0, use self.wv.most_similar() instead).\n","  model.most_similar(positive=['soldiers'])\n"]},{"output_type":"execute_result","data":{"text/plain":["[('azerbaijanis', 0.931729793548584),\n"," ('villages', 0.9087751507759094),\n"," ('azeri', 0.9025905132293701),\n"," ('wounded', 0.9015013575553894),\n"," ('fighting', 0.8987209796905518),\n"," ('troops', 0.8971478343009949),\n"," ('kurds', 0.895638644695282),\n"," ('refugees', 0.8911271095275879),\n"," ('village', 0.8897679448127747),\n"," ('slaughter', 0.8879608511924744)]"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670042665771,"user_tz":-540,"elapsed":3,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"28bdcdd8-75fa-4c57-b192-5bbaea6e2f63","id":"SHkZ2QGJTKBq"},"source":["model.wv.most_similar(positive=['man', 'soldiers'], negative=['woman'])"],"execution_count":100,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('civilians', 0.7888768315315247),\n"," ('murder', 0.7714155912399292),\n"," ('babies', 0.7714053988456726),\n"," ('saints', 0.766303300857544),\n"," ('greeks', 0.7650989294052124),\n"," ('arafat', 0.7625097632408142),\n"," ('rape', 0.7594596743583679),\n"," ('priests', 0.7576922178268433),\n"," ('contemporaries', 0.7532135248184204),\n"," ('fighters', 0.7531382441520691)]"]},"metadata":{},"execution_count":100}]},{"cell_type":"markdown","metadata":{"id":"nrBZX9ZlSw6O"},"source":["### 임베딩 벡터 시각화"]},{"cell_type":"code","metadata":{"id":"gA674OcrStUQ","executionInfo":{"status":"ok","timestamp":1670042749002,"user_tz":-540,"elapsed":2438,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["from gensim.models import KeyedVectors \n","\n","model.wv.save_word2vec_format('news_w2v')"],"execution_count":102,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8yRepgJTWSte"},"source":["* metadata.tsv와 tensor.tsv 데이터 생성"]},{"cell_type":"code","metadata":{"id":"zrfecS8nS9NE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670042817919,"user_tz":-540,"elapsed":4306,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"630e7a02-93bd-4e85-f8da-63b9962d0c8d"},"source":["!python -m gensim.scripts.word2vec2tensor -i news_w2v -o news_w2v"],"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["2022-12-03 04:46:54,873 - word2vec2tensor - INFO - running /usr/local/lib/python3.8/dist-packages/gensim/scripts/word2vec2tensor.py -i news_w2v -o news_w2v\n","2022-12-03 04:46:54,873 - utils_any2vec - INFO - loading projection weights from news_w2v\n","2022-12-03 04:46:55,932 - utils_any2vec - INFO - loaded (22220, 100) matrix from news_w2v\n","2022-12-03 04:46:57,450 - word2vec2tensor - INFO - 2D tensor file saved to news_w2v_tensor.tsv\n","2022-12-03 04:46:57,451 - word2vec2tensor - INFO - Tensor metadata file saved to news_w2v_metadata.tsv\n","2022-12-03 04:46:57,453 - word2vec2tensor - INFO - finished running word2vec2tensor.py\n"]}]},{"cell_type":"code","metadata":{"id":"9saj56WLW0qT","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1670042892174,"user_tz":-540,"elapsed":283,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"e1b197a9-23d0-4fd7-9b12-a01643dcb734"},"source":["from google.colab import files\n","\n","files.download('news_w2v_metadata.tsv')\n","files.download('news_w2v_tensor.tsv')"],"execution_count":105,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_6f04063d-8cca-4238-a911-84c01e7474fa\", \"news_w2v_metadata.tsv\", 171665)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_985e642b-f46f-4f33-b1e6-80823e83a927\", \"news_w2v_tensor.tsv\", 25992424)"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"nD_aU-YOTEon"},"source":["* Embedding Projector: https://projector.tensorflow.org/"]}]}