{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"19Xq9UE_qi8jx8xLeHuW2GohPpdQmKvai","timestamp":1670060517738}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"86l7I5SQ_u9J"},"source":["# 합성곱 신경망(Convolution Neural Network)\n","\n","- 이미지 인식, 음성 인식 등에 자주 사용되는데,  \n","  특히, 이미지 인식 분야에서 거의 모든 딥러닝 기술에 사용\n","\n","<br>\n","\n","## 컨볼루션 신경망의 등장\n","- 1989년 얀 르쿤(Yann LeCun) 교수의 논문에서 발표\n","\n","  - 필기체 인식에서 의미가 있었지만 범용화하는데에는 무리\n","\n","- 1998년, \"Gradient-Based Learning Applied to Document Recognition\"이라는 논문에서 LeNet-5 제시\n","\n","- 합성곱 층(convolution layer), 풀링 층(pooling layer) 소개\n","  <br>\n","\n","  <img src=\"https://miro.medium.com/max/4308/1*1TI1aGBZ4dybR6__DI9dzA.png\">\n","  \n","  <center>[LeNet-5 구조]</center>\n","\n","  <sub>출처: https://medium.com/@pechyonkin/key-deep-learning-architectures-lenet-5-6fc3c59e6f4</sub>"]},{"cell_type":"markdown","metadata":{"id":"Y46evOQHNukF"},"source":["## 컨볼루션 신경망 구조 예시\n","\n","<img src=\"https://www.oreilly.com/library/view/neural-network-projects/9781789138900/assets/c38754ca-f2ea-425a-b7a6-1fe0f2f5074e.png\" width=\"600\">\n","\n","<sub>출처: https://www.oreilly.com/library/view/neural-network-projects/9781789138900/8e87ad66-6de3-4275-81a4-62b54436bf16.xhtml</sub>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"Wtb8UWyTNxp_"},"source":["## 합성곱 연산\n","- 필터(filter) 연산\n","  - 입력 데이터에 필터를 통한 어떠한 연산을 진행\n","  \n","  - **필터에 대응하는 원소끼리 곱하고, 그 합을 구함**\n","\n","  - 연산이 완료된 결과 데이터를 **특징 맵(feature map)**이라 부름\n","\n","- 필터(filter)\n","  - 커널(kernel)이라고도 칭함\n","  \n","  - 흔히 사진 어플에서 사용하는 '이미지 필터'와 비슷한 개념\n","\n","  - 필터의 사이즈는 \"거의 항상 홀수\"\n","    - 짝수이면 패딩이 비대칭이 되어버림\n","  \n","    - 왼쪽, 오른쪽을 다르게 주어야함\n","  \n","    - 중심위치가 존재, 즉 구별된 하나의 픽셀(중심 픽셀)이 존재\n","\n","  - 필터의 학습 파라미터 개수는 입력 데이터의 크기와 상관없이 일정  \n","    따라서, 과적합을 방지할 수 있음\n","\n","  <br>\n","  <img src=\"http://deeplearning.net/software/theano_versions/dev/_images/numerical_no_padding_no_strides.gif\">\n","\n","  <sub>출처: http://deeplearning.net/software/theano_versions/dev/tutorial/conv_arithmetic.html</sub>\n","\n","\n","- 연산 시각화\n","  <img src=\"https://www.researchgate.net/profile/Ihab_S_Mohamed/publication/324165524/figure/fig3/AS:611103423860736@1522709818959/An-example-of-convolution-operation-in-2D-2.png\" width=\"500\">\n","\n","  <sub>출처: https://www.researchgate.net/figure/An-example-of-convolution-operation-in-2D-2_fig3_324165524</sub>\n","\n","\n","- 일반적으로, 합성곱 연산을 한 후의 데이터 사이즈는  \n","  ### $\\quad (n-f+1) \\times (n-f+1)$\n","    $n$: 입력 데이터의 크기  \n","    $f$: 필터(커널)의 크기\n","\n","\n","  <img src=\"https://miro.medium.com/max/1400/1*Fw-ehcNBR9byHtho-Rxbtw.gif\" width=\"400\">\n","\n","  <sub>출처: https://towardsdatascience.com/intuitively-understanding-convolutions-for-deep-learning-1f6f42faee1</sub>\n","  \n","  위 예에서 입력 데이터 크기($n$)는 5, 필터의 크기($k$)는 3이므로  \n","  출력 데이터의 크기는 $(5 - 3 + 1) = 3$\n"]},{"cell_type":"markdown","metadata":{"id":"5-ekDsJwN2Y-"},"source":["## 패딩(padding)과 스트라이드(stride)\n","- 필터(커널) 사이즈과 함께 **입력 이미지와 출력 이미지의 사이즈를 결정**하기 위해 사용\n","\n","- 사용자가 결정할 수 있음\n"]},{"cell_type":"markdown","metadata":{"id":"alV1bgcjN4Kc"},"source":["\n","### 패딩\n","- 입력 데이터의 주변을 특정 값으로 채우는 기법\n","  - 주로 0으로 많이 채움\n","\n","  <img src=\"http://deeplearning.net/software/theano_versions/dev/_images/arbitrary_padding_no_strides.gif\" width=\"300\">\n","\n","- 출력 데이터의 크기\n","  ### $\\quad (n+2p-f+1) \\times (n+2p-f+1)$\n","\n","  위 그림에서, 입력 데이터의 크기($n$)는 5, 필터의 크기($f$)는 4, 패딩값($p$)은 2이므로    \n","  출력 데이터의 크기는 ($5 + 2\\times 2 - 4 + 1) = 6$\n","\n","### 'valid' 와 'same'\n","- 'valid'\n","  - 패딩을 주지 않음\n","  - padding=0 (0으로 채워진 테두리가 아니라 패딩을 주지 않는다는 의미)\n","\n","- 'same'\n","  - 패딩을 주어 입력 이미지의 크기와 연산 후의 이미지 크기를 같게함\n","\n","  - 만약, 필터(커널)의 크기가 $k$ 이면,  \n","    패딩의 크기는 $p = \\frac{k-1}{2}$ (단, <u>stride=1)</u>"]},{"cell_type":"markdown","metadata":{"id":"zlZ7zG6ON85J"},"source":["\n","\n","### 스트라이드\n","- 필터를 적용하는 간격을 의미\n","\n","- 아래는 그림의 간격 2\n","\n","  <img src=\"http://deeplearning.net/software/theano_versions/dev/_images/no_padding_strides.gif\">\n"]},{"cell_type":"markdown","metadata":{"id":"LPcsND-0OCNm"},"source":["## 출력 데이터의 크기\n","\n","## $\\qquad OH = \\frac{H + 2P - FH}{S} + 1 $ \n","## $\\qquad OW = \\frac{W + 2P - FW}{S} + 1 $ \n","\n","- 입력 크기 : $(H, W)$\n","\n","- 필터 크기 : $(FH, FW)$\n","\n","- 출력 크기 : $(OH, OW)$\n","\n","- 패딩, 스트라이드 : $P, S$\n","\n","- (주의) \n","  - 위 식의 값에서 $\\frac{H + 2P - FH}{S}$ 또는 $\\frac{W + 2P - FW}{S}$가 정수로 나누어 떨어지는 값이어야 함\n","  - 만약, 정수로 나누어 떨어지지 않으면  \n","    패딩, 스트라이드값을 조정하여 정수로 나누어 떨어지게 해야함\n"]},{"cell_type":"markdown","metadata":{"id":"1x4UoMbF8jJ9"},"source":["## 풀링(Pooling)\n","\n","- 필터(커널) 사이즈 내에서 특정 값을 추출하는 과정"]},{"cell_type":"markdown","metadata":{"id":"lDiaO3XF8oC_"},"source":["### 맥스 풀링(Max Pooling)\n","- 가장 많이 사용되는 방법\n","\n","- 출력 데이터의 사이즈 계산은 컨볼루션 연산과 동일\n","## $\\quad OH = \\frac{H + 2P - FH}{S} + 1 $ \n","## $\\quad OW = \\frac{W + 2P - FW}{S} + 1 $ \n","\n","- 일반적으로 stride=2, kernel_size=2 를 통해  \n","  **특징맵의 크기를 <u>절반으로 줄이는 역할</u>**\n","\n","- 모델이 물체의 주요한 특징을 학습할 수 있도록 해주며,  \n","  컨볼루션 신경망이 이동 불변성 특성을 가지게 해줌\n","  - 예를 들어, 아래의 그림에서 초록색 사각형 안에 있는  \n","    2와 8의 위치를 바꾼다해도 맥스 풀링 연산은 8을 추출\n","\n","- 모델의 파라미터 개수를 줄여주고, 연산 속도를 빠르게 해줌\n","\n","  <br>\n","\n","  <img src=\"https://cs231n.github.io/assets/cnn/maxpool.jpeg\" width=\"600\">\n","\n","  <sub>출처: https://cs231n.github.io/convolutional-networks/</sub>"]},{"cell_type":"markdown","metadata":{"id":"CrvtX4LrkhPI"},"source":["## Conv1D \n","\n","- 텍스트 분류나 시계열 예측 같은 간단한 문제, 오디오 생성, 기계 번역 등의 문제에서 좋은 성능\n","\n","- 타임스텝의 순서에 민감하지 X\n","\n","\n","- 2D Convolution\n","  - 지역적 특징을 인식\n","\n","  <img src=\"https://missinglink.ai/wp-content/uploads/2019/03/2D-convolutional-example_2x-700x584.png\" width=\"500\">\n","\n","- 1D Convolution\n","  - 문맥을 인식\n","\n","  <img src=\"https://missinglink.ai/wp-content/uploads/2019/03/1D-convolutional-example_2x.png\" width=\"500\">\n","\n","  <sub>출처: https://missinglink.ai/guides/keras/keras-conv1d-working-1d-convolutional-neural-networks-keras/</sub>"]},{"cell_type":"markdown","metadata":{"id":"aJNAI-aYnDuc"},"source":["### Conv1D Layer\n","- 입력: `(batch_size, timesteps, channels)`\n","\n","- 출력: `(batch_size, timesteps, filters)`\n","\n","- 필터의 사이즈가 커져도 모델이 급격히 증가하지 않기 때문에 다양한 크기를 사용할 수 있음\n","- 데이터의 품질이 좋으면 굳이 크기를 달리하여 여러 개를 사용하지 않아도 될 수도 있음"]},{"cell_type":"markdown","metadata":{"id":"ADJZHPLJqTZa"},"source":["### MaxPooling1D Layer\n","- 다운 샘플링 효과\n","\n","- 단지 1차원형태로 바뀐 것 뿐"]},{"cell_type":"markdown","metadata":{"id":"wirZzwYJrNll"},"source":["### GlovalMaxPooling Layer\n","- 배치차원을 제외하고 2차원 형태를 1차원 형태로 바꾸어주는 레이어\n","\n","- Flatten layer로 대신 사용가능"]},{"cell_type":"markdown","metadata":{"id":"YQY_1IL9nQs2"},"source":["## IMDB 데이터"]},{"cell_type":"markdown","metadata":{"id":"pl4Eu32qnUES"},"source":["### 데이터 로드 및 전처리"]},{"cell_type":"code","metadata":{"id":"WcG-Hiltklbe","executionInfo":{"status":"ok","timestamp":1670079711869,"user_tz":-540,"elapsed":4,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["from tensorflow.keras.datasets import imdb\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.optimizers import RMSprop\n","from tensorflow.keras.layers import Dense, Embedding, Conv1D, MaxPooling1D, GlobalMaxPooling1D"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"GGYaNT8hnec5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670079720341,"user_tz":-540,"elapsed":5289,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"94c9cdf6-b159-4404-ab5f-8092a5c2bd7d"},"source":["num_words = 10000\n","max_len = 500\n","batch_size = 32\n","\n","(input_train, y_train), (input_test, y_test) = imdb.load_data(num_words=num_words)\n","\n","print(len(input_train))\n","print(len(input_test))"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n","17464789/17464789 [==============================] - 1s 0us/step\n","25000\n","25000\n"]}]},{"cell_type":"code","metadata":{"id":"nQBzp3ownpEK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670079733770,"user_tz":-540,"elapsed":524,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"d0bfdf07-a12b-4eac-da2e-3320c94f4f9a"},"source":["pad_x_train = pad_sequences(input_train, maxlen=max_len)\n","pad_x_test = pad_sequences(input_test, maxlen=max_len)\n","\n","print(pad_x_train.shape)\n","print(pad_x_test.shape)"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["(25000, 500)\n","(25000, 500)\n"]}]},{"cell_type":"markdown","metadata":{"id":"j3E0hYiHoBO0"},"source":["### 모델 구성"]},{"cell_type":"code","metadata":{"id":"PvKPr7N6nuHr","executionInfo":{"status":"ok","timestamp":1670080531748,"user_tz":-540,"elapsed":3,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["def build_model():\n","  model = Sequential()\n","  \n","  model.add(Embedding(input_dim = num_words, output_dim=32, input_length=max_len))\n","  model.add(Conv1D(32, 7, activation='relu'))\n","  model.add(MaxPooling1D(7))\n","  model.add(Conv1D(32, 5, activation='relu'))\n","  model.add(MaxPooling1D(5))\n","  model.add(GlobalMaxPooling1D())\n","  model.add(Dense(1, activation='sigmoid'))\n","\n","  model.compile(optimizer=RMSprop(learning_rate = 1e-4),\n","                loss = 'binary_crossentropy',\n","                metrics=['accuracy'])\n","  \n","  return model"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"wwWZ47NHolB6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670080533201,"user_tz":-540,"elapsed":8,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"8dcd22b6-0ede-4795-b109-31ec61ea94bf"},"source":["model = build_model()\n","model.summary()"],"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," embedding_1 (Embedding)     (None, 500, 32)           320000    \n","                                                                 \n"," conv1d_2 (Conv1D)           (None, 494, 32)           7200      \n","                                                                 \n"," max_pooling1d_2 (MaxPooling  (None, 70, 32)           0         \n"," 1D)                                                             \n","                                                                 \n"," conv1d_3 (Conv1D)           (None, 66, 32)            5152      \n","                                                                 \n"," max_pooling1d_3 (MaxPooling  (None, 13, 32)           0         \n"," 1D)                                                             \n","                                                                 \n"," global_max_pooling1d_1 (Glo  (None, 32)               0         \n"," balMaxPooling1D)                                                \n","                                                                 \n"," dense_1 (Dense)             (None, 1)                 33        \n","                                                                 \n","=================================================================\n","Total params: 332,385\n","Trainable params: 332,385\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","metadata":{"id":"0qUbPGdmpHpQ"},"source":["### 모델 학습"]},{"cell_type":"code","metadata":{"id":"xcCgjLHvonWB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670080811991,"user_tz":-540,"elapsed":42309,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"c09e9edf-85fc-49b3-ef70-8632d47882f9"},"source":["history = model.fit(pad_x_train, y_train,\n","                    batch_size=128, epochs=30,\n","                    validation_split=0.2)"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","157/157 [==============================] - 10s 8ms/step - loss: 0.6929 - accuracy: 0.5106 - val_loss: 0.6926 - val_accuracy: 0.5256\n","Epoch 2/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.6908 - accuracy: 0.5849 - val_loss: 0.6912 - val_accuracy: 0.5618\n","Epoch 3/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.6880 - accuracy: 0.6786 - val_loss: 0.6889 - val_accuracy: 0.5516\n","Epoch 4/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.6828 - accuracy: 0.7035 - val_loss: 0.6814 - val_accuracy: 0.7110\n","Epoch 5/30\n","157/157 [==============================] - 1s 8ms/step - loss: 0.6700 - accuracy: 0.7564 - val_loss: 0.6617 - val_accuracy: 0.7532\n","Epoch 6/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.6385 - accuracy: 0.7815 - val_loss: 0.6171 - val_accuracy: 0.7812\n","Epoch 7/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.5775 - accuracy: 0.8083 - val_loss: 0.5442 - val_accuracy: 0.8028\n","Epoch 8/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.4926 - accuracy: 0.8306 - val_loss: 0.4637 - val_accuracy: 0.8236\n","Epoch 9/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.4131 - accuracy: 0.8490 - val_loss: 0.4046 - val_accuracy: 0.8358\n","Epoch 10/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.3556 - accuracy: 0.8630 - val_loss: 0.3687 - val_accuracy: 0.8438\n","Epoch 11/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.3179 - accuracy: 0.8745 - val_loss: 0.3496 - val_accuracy: 0.8486\n","Epoch 12/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.2925 - accuracy: 0.8852 - val_loss: 0.3394 - val_accuracy: 0.8540\n","Epoch 13/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.2732 - accuracy: 0.8928 - val_loss: 0.3321 - val_accuracy: 0.8582\n","Epoch 14/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.2575 - accuracy: 0.9003 - val_loss: 0.3310 - val_accuracy: 0.8588\n","Epoch 15/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.2439 - accuracy: 0.9068 - val_loss: 0.3252 - val_accuracy: 0.8636\n","Epoch 16/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.2315 - accuracy: 0.9117 - val_loss: 0.3238 - val_accuracy: 0.8656\n","Epoch 17/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.2207 - accuracy: 0.9166 - val_loss: 0.3229 - val_accuracy: 0.8664\n","Epoch 18/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.2104 - accuracy: 0.9218 - val_loss: 0.3244 - val_accuracy: 0.8678\n","Epoch 19/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.2012 - accuracy: 0.9249 - val_loss: 0.3266 - val_accuracy: 0.8664\n","Epoch 20/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.1924 - accuracy: 0.9291 - val_loss: 0.3264 - val_accuracy: 0.8692\n","Epoch 21/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.1845 - accuracy: 0.9327 - val_loss: 0.3291 - val_accuracy: 0.8680\n","Epoch 22/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.1771 - accuracy: 0.9365 - val_loss: 0.3310 - val_accuracy: 0.8684\n","Epoch 23/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.1702 - accuracy: 0.9393 - val_loss: 0.3346 - val_accuracy: 0.8664\n","Epoch 24/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.1635 - accuracy: 0.9417 - val_loss: 0.3401 - val_accuracy: 0.8678\n","Epoch 25/30\n","157/157 [==============================] - 1s 6ms/step - loss: 0.1574 - accuracy: 0.9449 - val_loss: 0.3424 - val_accuracy: 0.8670\n","Epoch 26/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.1511 - accuracy: 0.9486 - val_loss: 0.3450 - val_accuracy: 0.8684\n","Epoch 27/30\n","157/157 [==============================] - 1s 8ms/step - loss: 0.1458 - accuracy: 0.9508 - val_loss: 0.3592 - val_accuracy: 0.8644\n","Epoch 28/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.1401 - accuracy: 0.9526 - val_loss: 0.3535 - val_accuracy: 0.8672\n","Epoch 29/30\n","157/157 [==============================] - 1s 8ms/step - loss: 0.1351 - accuracy: 0.9555 - val_loss: 0.3572 - val_accuracy: 0.8674\n","Epoch 30/30\n","157/157 [==============================] - 1s 7ms/step - loss: 0.1304 - accuracy: 0.9571 - val_loss: 0.3662 - val_accuracy: 0.8672\n"]}]},{"cell_type":"markdown","metadata":{"id":"n2yEkawIph4C"},"source":["### 시각화"]},{"cell_type":"code","metadata":{"id":"BfKC0UOkpPmP","colab":{"base_uri":"https://localhost:8080/","height":513},"executionInfo":{"status":"ok","timestamp":1670081022939,"user_tz":-540,"elapsed":597,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"aef55a23-e6e1-4831-c01b-d9f0f0349448"},"source":["import matplotlib.pyplot as plt\n","\n","\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","acc = history.history['accuracy']\n","val_acc = history.history['val_accuracy']\n","\n","epochs = range(1, len(loss) + 1)\n","\n","plt.plot(epochs, loss, 'b--', label='training loss')\n","plt.plot(epochs, val_loss, 'r:', label='validation loss')\n","plt.grid()\n","plt.legend()\n","\n","plt.figure()\n","plt.plot(epochs, acc, 'b--', label='training accuracy')\n","plt.plot(epochs, val_acc, 'r:', label='validation accuracy')\n","plt.grid()\n","plt.legend()\n","\n","plt.show()"],"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["model.evaluate(pad_x_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TD9ttszklrpG","executionInfo":{"status":"ok","timestamp":1670081087094,"user_tz":-540,"elapsed":2303,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"33f5eaa2-287a-432f-870b-abf6e3acde03"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["782/782 [==============================] - 2s 3ms/step - loss: 0.3905 - accuracy: 0.8488\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.39051321148872375, 0.8488399982452393]"]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"Oz_Iu_VHV7Z5"},"source":["## Reuters 데이터"]},{"cell_type":"markdown","metadata":{"id":"4_Q6p0nhV7Z6"},"source":["### 데이터 로드 및 전처리"]},{"cell_type":"code","metadata":{"id":"waEmkCowV7Z7","executionInfo":{"status":"ok","timestamp":1670081149109,"user_tz":-540,"elapsed":2,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}}},"source":["from tensorflow.keras.datasets import reuters\n"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670081939906,"user_tz":-540,"elapsed":1502,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"26bb2180-74fa-44d9-cc3d-acb493c5c38f","id":"D42o6fr2mDeR"},"source":["num_words = 10000\n","max_len = 500\n","\n","\n","(input_train, y_train), (input_test, y_test) = reuters.load_data(num_words=num_words)\n","\n","print(len(input_train))\n","print(len(input_test))"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["8982\n","2246\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670081940396,"user_tz":-540,"elapsed":2,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"4252f440-3f0b-4201-b3f3-a4e2dac65990","id":"T7qoUCIkmDeY"},"source":["pad_x_train = pad_sequences(input_train, maxlen=max_len)\n","pad_x_test = pad_sequences(input_test, maxlen=max_len)\n","\n","print(pad_x_train.shape)\n","print(pad_x_test.shape)"],"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["(8982, 500)\n","(2246, 500)\n"]}]},{"cell_type":"markdown","metadata":{"id":"YjnAACY4mDeY"},"source":["### 모델 구성"]},{"cell_type":"code","metadata":{"executionInfo":{"status":"ok","timestamp":1670081944098,"user_tz":-540,"elapsed":500,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"id":"KXQ-x1DAmDeZ"},"source":["def build_model():\n","  model = Sequential()\n","  \n","  model.add(Embedding(input_dim = num_words, output_dim=64, input_length=max_len))\n","  model.add(Conv1D(64, 7, activation='relu'))\n","  model.add(MaxPooling1D(7))\n","  model.add(Conv1D(64, 5, activation='relu'))\n","  model.add(MaxPooling1D(5))\n","  model.add(GlobalMaxPooling1D())\n","  model.add(Dense(46, activation='softmax'))\n","\n","  model.compile(optimizer='adam',\n","                loss = 'sparse_categorical_crossentropy',\n","                metrics=['accuracy'])\n","  \n","  return model"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670081947543,"user_tz":-540,"elapsed":391,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"6808ae96-9fed-4bf2-d1b8-48582a0995e1","id":"_jsTiIzgmDeZ"},"source":["model = build_model()\n","model.summary()"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_3\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," embedding_3 (Embedding)     (None, 500, 64)           640000    \n","                                                                 \n"," conv1d_6 (Conv1D)           (None, 494, 64)           28736     \n","                                                                 \n"," max_pooling1d_6 (MaxPooling  (None, 70, 64)           0         \n"," 1D)                                                             \n","                                                                 \n"," conv1d_7 (Conv1D)           (None, 66, 64)            20544     \n","                                                                 \n"," max_pooling1d_7 (MaxPooling  (None, 13, 64)           0         \n"," 1D)                                                             \n","                                                                 \n"," global_max_pooling1d_3 (Glo  (None, 64)               0         \n"," balMaxPooling1D)                                                \n","                                                                 \n"," dense_3 (Dense)             (None, 46)                2990      \n","                                                                 \n","=================================================================\n","Total params: 692,270\n","Trainable params: 692,270\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","metadata":{"id":"qhd4hbdcmDeZ"},"source":["### 모델 학습"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670081972181,"user_tz":-540,"elapsed":20828,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"4804f038-5420-4838-fd93-10e5298ca035","id":"XhSocXX7mDeZ"},"source":["history = model.fit(pad_x_train, y_train,\n","                    batch_size=128, epochs=30,\n","                    validation_split=0.2)"],"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","57/57 [==============================] - 2s 16ms/step - loss: 2.7498 - accuracy: 0.3858 - val_loss: 2.1496 - val_accuracy: 0.4713\n","Epoch 2/30\n","57/57 [==============================] - 1s 11ms/step - loss: 1.9212 - accuracy: 0.5111 - val_loss: 1.7466 - val_accuracy: 0.5309\n","Epoch 3/30\n","57/57 [==============================] - 1s 11ms/step - loss: 1.6467 - accuracy: 0.5684 - val_loss: 1.6057 - val_accuracy: 0.6027\n","Epoch 4/30\n","57/57 [==============================] - 1s 11ms/step - loss: 1.4709 - accuracy: 0.6366 - val_loss: 1.4954 - val_accuracy: 0.6361\n","Epoch 5/30\n","57/57 [==============================] - 1s 11ms/step - loss: 1.2764 - accuracy: 0.6909 - val_loss: 1.3890 - val_accuracy: 0.6856\n","Epoch 6/30\n","57/57 [==============================] - 1s 11ms/step - loss: 1.0617 - accuracy: 0.7459 - val_loss: 1.2887 - val_accuracy: 0.7151\n","Epoch 7/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.8756 - accuracy: 0.7850 - val_loss: 1.2598 - val_accuracy: 0.7257\n","Epoch 8/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.7105 - accuracy: 0.8241 - val_loss: 1.2664 - val_accuracy: 0.7334\n","Epoch 9/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.5708 - accuracy: 0.8566 - val_loss: 1.3212 - val_accuracy: 0.7323\n","Epoch 10/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.4636 - accuracy: 0.8862 - val_loss: 1.3701 - val_accuracy: 0.7351\n","Epoch 11/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.3878 - accuracy: 0.9051 - val_loss: 1.4546 - val_accuracy: 0.7307\n","Epoch 12/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.3156 - accuracy: 0.9251 - val_loss: 1.5206 - val_accuracy: 0.7340\n","Epoch 13/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.2574 - accuracy: 0.9370 - val_loss: 1.5666 - val_accuracy: 0.7318\n","Epoch 14/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.2265 - accuracy: 0.9473 - val_loss: 1.6407 - val_accuracy: 0.7240\n","Epoch 15/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.2168 - accuracy: 0.9468 - val_loss: 1.6217 - val_accuracy: 0.7373\n","Epoch 16/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1774 - accuracy: 0.9556 - val_loss: 1.6654 - val_accuracy: 0.7301\n","Epoch 17/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1723 - accuracy: 0.9548 - val_loss: 1.7338 - val_accuracy: 0.7323\n","Epoch 18/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1519 - accuracy: 0.9599 - val_loss: 1.7375 - val_accuracy: 0.7351\n","Epoch 19/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1440 - accuracy: 0.9612 - val_loss: 1.7688 - val_accuracy: 0.7284\n","Epoch 20/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1350 - accuracy: 0.9592 - val_loss: 1.7862 - val_accuracy: 0.7290\n","Epoch 21/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1306 - accuracy: 0.9616 - val_loss: 1.7533 - val_accuracy: 0.7396\n","Epoch 22/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1249 - accuracy: 0.9623 - val_loss: 1.8046 - val_accuracy: 0.7279\n","Epoch 23/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1213 - accuracy: 0.9631 - val_loss: 1.8326 - val_accuracy: 0.7201\n","Epoch 24/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1209 - accuracy: 0.9638 - val_loss: 1.8184 - val_accuracy: 0.7346\n","Epoch 25/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1216 - accuracy: 0.9640 - val_loss: 1.7709 - val_accuracy: 0.7307\n","Epoch 26/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1149 - accuracy: 0.9628 - val_loss: 1.7936 - val_accuracy: 0.7407\n","Epoch 27/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1065 - accuracy: 0.9644 - val_loss: 1.8356 - val_accuracy: 0.7301\n","Epoch 28/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1046 - accuracy: 0.9634 - val_loss: 1.8086 - val_accuracy: 0.7223\n","Epoch 29/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1175 - accuracy: 0.9631 - val_loss: 1.7836 - val_accuracy: 0.7479\n","Epoch 30/30\n","57/57 [==============================] - 1s 11ms/step - loss: 0.1028 - accuracy: 0.9642 - val_loss: 1.8414 - val_accuracy: 0.7334\n"]}]},{"cell_type":"markdown","metadata":{"id":"mIGKPXaNmDeZ"},"source":["### 시각화"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"executionInfo":{"status":"ok","timestamp":1670081972769,"user_tz":-540,"elapsed":603,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"dfc5c300-69e9-4744-8f5c-cfa8ed7bc378","id":"R3lMHjzVmDeZ"},"source":["loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","acc = history.history['accuracy']\n","val_acc = history.history['val_accuracy']\n","\n","epochs = range(1, len(loss) + 1)\n","\n","plt.plot(epochs, loss, 'b--', label='training loss')\n","plt.plot(epochs, val_loss, 'r:', label='validation loss')\n","plt.grid()\n","plt.legend()\n","\n","plt.figure()\n","plt.plot(epochs, acc, 'b--', label='training accuracy')\n","plt.plot(epochs, val_acc, 'r:', label='validation accuracy')\n","plt.grid()\n","plt.legend()\n","\n","plt.show()"],"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["model.evaluate(pad_x_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670081972769,"user_tz":-540,"elapsed":5,"user":{"displayName":"‍심서현[ 학부휴학 / 영어영문학과 ]","userId":"03317337495555700739"}},"outputId":"516a7a6b-4002-412d-90db-58101dd2523b","id":"4AewV1fcmDeZ"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["71/71 [==============================] - 0s 3ms/step - loss: 1.7788 - accuracy: 0.7275\n"]},{"output_type":"execute_result","data":{"text/plain":["[1.7788200378417969, 0.7275155782699585]"]},"metadata":{},"execution_count":29}]}]}